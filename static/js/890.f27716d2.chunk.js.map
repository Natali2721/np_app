{"version":3,"file":"static/js/890.f27716d2.chunk.js","mappings":"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","sources":["Api/apiServices.js","components/TrackBar/SearchForm.js","components/DepartmentsList/DepartmentsList.js","components/SearchBar/SearchInput.js","components/SearchBar/SearchBar.js","pages/Departments.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '732dcfaad69fb475455c551db818568b';\nconst BASE_URL = 'https://api.novaposhta.ua/v2.0/json/';\nconst LIMIT_PER_PAGE = 12;\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getTrackingInfo = async trackingNumber => {\n  const config = {\n    apiKey: API_KEY,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: trackingNumber,\n          Phone: '380600000000',\n        },\n      ],\n    },\n  };\n\n  const { data } = await instance.post('', config);\n\n  return data.data[0];\n};\n\nexport const getDepartmentsInfo = async (city, page) => {\n  const config = {\n    apiKey: API_KEY,\n    modelName: 'Address',\n    calledMethod: 'getWarehouses',\n    methodProperties: {\n      CityName: city,\n      Limit: LIMIT_PER_PAGE,\n      Page: page,\n    },\n  };\n\n  const response = await instance.post('', config);\n  return response.data;\n};\n\n// export const getDepartmentsInfo = async (page: number) => {\n//   const reqCredentials = reqStructure({\n//     modelName: 'Address',\n//     calledMethod: 'getWarehouses',\n//     methodProperties: {\n//       Page: page,\n//       Limit: LIMIT_PER_PAGE,\n//     },\n//   });\n//   const { data } = await instance.post('', reqCredentials);\n//   return { data: data.data, totalCount: data.info.totalCount };\n// };\n","import PropTypes from 'prop-types';\nimport { Form } from 'styles/Element.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Button, Galery, GaleryItem, Title } from 'styles/Element.styled';\nimport PropTypes from 'prop-types';\n\nconst DepartmentsList = ({ items, onClick, city }) => {\n  console.log(items);\n\n  return (\n    <div>\n      {items.length === 0 && city === '' && (\n        <Title>Оберіть, будь ласка, населений пункт</Title>\n      )}\n      {items.length > 0 && (\n        <Galery>\n          {items.map(item => {\n            return (\n              <GaleryItem key={item.SiteKey}>{item.Description}</GaleryItem>\n            );\n          })}\n        </Galery>\n      )}\n      {items.length > 0 && <Button onClick={onClick}>LoadMore</Button>}\n    </div>\n  );\n};\n\nexport default DepartmentsList;\n\nDepartmentsList.propTypes = {\n  items: PropTypes.array,\n  onClick: PropTypes.func,\n  city: PropTypes.string,\n};\n","import { Input } from 'styles/Element.styled';\n\nexport const SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"city\"\n    pattern=\"^[А-Яа-яёЁЇїІіЄєҐґ]+$\"\n    title=\"May contain only letters\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Введіть назву міста...\"\n  />\n);\n","import { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\nimport { ButtonIcon, SearchBox } from 'styles/Element.styled';\nimport SearchForm from 'components/TrackBar/SearchForm';\nimport { SearchInput } from './SearchInput';\n\nexport const SearchBar = ({ onSubmit }) => (\n  <SearchBox>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <ButtonIcon type=\"submit\" aria-label=\"search button\">\n        <BsSearch />\n      </ButtonIcon>\n    </SearchForm>\n  </SearchBox>\n);\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { getDepartmentsInfo } from 'Api/apiServices';\nimport DepartmentsList from 'components/DepartmentsList/DepartmentsList';\nimport Loader from 'components/Loader/Loader';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { Container } from 'styles/Element.styled';\n\nconst Departments = () => {\n  const [city, setCity] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    console.log(searchForm.elements.city.value);\n    setCity(searchForm.elements.city.value);\n    setPage(1);\n    setDepartments([]);\n    setIsLoading(true);\n    console.log(isLoading);\n  };\n\n  const onClickLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  useEffect(() => {\n    if (city === '') {\n      return console.log('please... ');\n    }\n\n    getDepartmentsInfo(city, page).then(data => {\n      console.log(data);\n      if (!data) {\n        setDepartments([]);\n        return console.log(\n          'There is no departments with this request. Please, try again'\n        );\n      }\n      setDepartments(prevState => [...prevState, ...data.data]);\n    });\n    setIsLoading(false);\n  }, [city, page]);\n\n  useEffect(() => {\n    console.log(city);\n    console.log(departments);\n  }, [city, departments]);\n\n  return (\n    <Container>\n      <SearchBar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      <DepartmentsList\n        city={city}\n        isLoading={isLoading}\n        items={departments}\n        onClick={onClickLoadMore}\n      />\n    </Container>\n  );\n};\n\nexport default Departments;\n"],"names":["API_KEY","instance","axios","baseURL","getTrackingInfo","trackingNumber","config","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","post","data","getDepartmentsInfo","city","page","CityName","Limit","Page","response","onSubmit","children","items","onClick","console","log","length","map","item","Description","SiteKey","SearchInput","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","SearchForm","useState","setCity","departments","setDepartments","setPage","isLoading","setIsLoading","useEffect","then","prevState","e","preventDefault","searchForm","currentTarget","elements","value","Loader"],"sourceRoot":""}